apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  10240;
    }
    http {
      upstream shopping-app-servers {
          server shopping-app:8080 max_fails=1;
          server shopping-app2:8080 backup;
      }
      server {
          resolver kube-dns.kube-system valid=1s;
          listen       80;
          server_name  _;
          proxy_next_upstream http_500 http_502 http_503 http_504 error timeout invalid_header;
          location / {
              proxy_pass    http://shopping-app-servers;
          }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopping-nginx
  labels:
    app: shopping-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shopping-nginx
  template:
    metadata:
      labels:
        app: shopping-nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.17.9
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: nginx-conf
        - mountPath: /var/log/nginx
          name: log
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: log
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: shopping-app-service
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: shopping-nginx